library(shiny)
library(tidyverse)
library(leaflet)

shootings <- read.csv("MassShootings.csv")
text_about <- "This data was complied by Mother Jones, nonprofit founded in 1976, Originally covering cases from 1982-2012, 
this database has since been expanded numerous times to remain current"

library(lubridate)
shootings$date <- mdy(shootings$date)

# boot strap page allows the image to take up the whole page without margins
ui <- bootstrapPage(
  theme = shinythemes::shinytheme("simplex"),
  leaflet::leafletOutput("map", width = "100%", height = "100%"), # use leafletOutput to put the map on the ui
  absolutePanel(top = 10, right = 10, id = "controls", # make a static panel that is always in the same space
                sliderInput("nb_fatalities", "Minimum Fatalities", 1, 40, 10),
                dateRangeInput("date_range","Select Date", "2010-01-01","2019-12-01"),
                actionButton("show_about", "About")
  ),
  # use custom styles so that the panel is white and has some padding
  tags$style(type = "text/css", "
             html, body {width:100%;height:100%}
             #controls{background-color:white;padding:20px;}
             ")
)

# create the interactive map in the server
server <- function(input, output, session) {
  # add an about message
  observeEvent(input$show_about, {
    showModal(modalDialog(text_about, title = 'About'))
  })
  
  # add a reactive function to cache the data and increase performance
  rval_mass_shootings <- reactive({
    shootings %>%
      filter(date >= input$date_range[1],
             date <= input$date_range[2],
             fatalities >= input$nb_fatalities)
  })
   output$map <- leaflet::renderLeaflet({
    rval_mass_shootings() %>%
      leaflet() %>%
        addTiles() %>%
        setView(-98.58, 39.82, zoom = 5) %>%# center the map on the US
        addCircleMarkers(
          popup = ~ summary, 
          radius = ~ fatalities,
          fillColor = "red", color = "red", weight = 1
        )
  })

}

shinyApp(ui = ui, server = server)
